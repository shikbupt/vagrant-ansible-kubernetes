---
- hosts: all
  become: true
  vars:
    proxy_ip: xx.xx.xx.xx:xx
    proxy_env:
      http_proxy: "http://{{ proxy_ip }}"
      https_proxy: "http://{{ proxy_ip }}"
      all_proxy: "socks5://{{ proxy_ip }}"
  tasks:
  - name: copy update_apt_source.sh
    copy:
      src: "./update_apt_source.sh"
      dest: '/etc/apt'
      owner: root
      group: root
      mode: 0777

  - name: update apt source.list
    shell: /etc/apt/update_apt_source.sh

  - name: Install packages that allow apt to be used over HTTPS
    apt:
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
      - apt-transport-https
      - ca-certificates
      - curl
      - software-properties-common 
      - gnupg2

  - name: Set timezone to Asia/Shanghai
    timezone:
      name: Asia/Shanghai

  - name: Install containerd
    apt: 
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
      - containerd

  - name: containerd proxy
    lineinfile:
      path: /lib/systemd/system/containerd.service
      insertafter: '^\[Service\]'
      line: Environment="HTTP_PROXY=http://{{ proxy_ip }}" "NO_PROXY=192.168.50.10/16,10.96.0.0/12,172.30.0.0/16"
      state: present
      firstmatch: yes
  
  - name: Restart containerd
    service:
      name: containerd
      daemon_reload: yes
      state: restarted

  - name: Remove swapfile from /etc/fstab
    mount:
      name: "{{ item }}"
      fstype: swap
      state: absent
    with_items:
      - swap
      - none

  - name: Disable swap
    command: swapoff -a
    when: ansible_swaptotal_mb > 0

  - name: Add an apt signing key for Kubernetes
    apt_key:
      url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
      state: present
    environment: "{{ proxy_env }}"

  - name: Adding apt repository for Kubernetes
    apt_repository:
      repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
      state: present
      filename: kubernetes.list
    environment: "{{ proxy_env }}"

  - name: Install Kubernetes binaries
    apt: 
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
        - kubelet=1.21.0-00
        - kubeadm=1.21.0-00
        - kubectl=1.21.0-00
    environment: "{{ proxy_env }}"

  - name: Configure containerd
    blockinfile:
      create: true
      path: /etc/modules-load.d/containerd.conf
      block: |
        overlay
        br_netfilter

  - name: Enable kernel modules
    shell: |
      modprobe overlay
      modprobe br_netfilter

  - name: Configure IP forwarding and iptables
    blockinfile:
      create: true
      path: /etc/sysctl.conf
      block: |
        net.bridge.bridge-nf-call-iptables = 1
        net.ipv4.ip_forward = 1

  - name: Persist changes
    command: sysctl -p

  - name: Get IP eth1 addr
    shell: ifconfig eth1 | grep 'inet' | cut -d{{':'}} -f2 | awk '{ print $2 }'
    register: output

  - name: Configure kubelet
    lineinfile:
      path: /etc/systemd/system/kubelet.service.d/10-kubeadm.conf
      line: Environment="KUBELET_EXTRA_ARGS=--node-ip={{ output.stdout }}"

  - name: Copy the join command to server location
    copy: src=join-command dest=/tmp/join-command.sh mode=0777

  - name: Join the node to cluster
    command: sh /tmp/join-command.sh 
